// swiftlint:disable all
// Generated using SwiftGen â€” https://github.com/SwiftGen/SwiftGen

{% if files %}
{% set accessModifier %}{% if param.publicAccess %}public {% else %}{% endif %}{% endset %}
import Foundation

// swiftlint:disable superfluous_disable_command
// swiftlint:disable file_length

// MARK: - Plist Files
{% macro fileBlock file %}
  {% call documentBlock file file.document %}
{% endmacro %}
{% macro documentBlock file document %}
  {% set rootType %}{% call typeBlock document.metadata %}{% endset %}
  {% if document.metadata.type == "Array" %}
  {{accessModifier}}static let items: {{rootType}} = {% call valueBlock document.data document.metadata %}
  {% elif document.metadata.type == "Dictionary" %}
  {% for key,value in document.metadata.properties %}
  {% if key == "NSUserActivityTypes" %}
  {{accessModifier}}enum {{param.activityTypeEnumName|default:"ActivityType"}}: String {
    {% for val in document.data[key] %}
    {% call activityBlock val value.element val %}
    {% endfor %}
  }
  {% else %}
  {{accessModifier}}{% call propertyBlock key value document.data %}
  {% endif %}
  {% endfor %}
  {% else %}
  {{accessModifier}}static let value: {{rootType}} = {% call valueBlock document.data document.metadata %}
  {% endif %}
{% endmacro %}
{% macro typeBlock metadata %}{% filter removeNewlines:"leading" %}
  {% if metadata.type == "Array" %}
    [{% call typeBlock metadata.element %}]
  {% elif metadata.type == "Dictionary" %}
    [String: Any]
  {% else %}
    {{metadata.type}}
  {% endif %}
{% endfilter %}{% endmacro %}
{% macro lastElement data %}
{% for element in data|split:"." %}
  {% if forloop.last %}
      {{ element }}
  {% endif %}
{% endfor %}
{% endmacro %}
{% macro activityBlock key metadata data %}{% filter removeNewlines:"leading" %}
{% set name %}{% call lastElement key %}{% endset %}
{% set propertyName %}{{ name|swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords }}{% endset %}
case {{propertyName}} = {% call valueBlock data metadata %}
{% endfilter %}{% endmacro %}
{% macro propertyBlock key metadata data %}{% filter removeNewlines:"leading" %}
  {% set propertyName %}{{key|swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords}}{% endset %}
  {% set propertyType %}{% call typeBlock metadata %}{% endset %}
  static let {{propertyName}}: {{propertyType}} = {% call valueBlock data[key] metadata %}
{% endfilter %}{% endmacro %}
{% macro valueBlock value metadata %}{% filter removeNewlines:"leading" %}
  {% if metadata.type == "String" %}
    "{{ value }}"
  {% elif metadata.type == "Date" %}
    Date(timeIntervalSinceReferenceDate: {{ value.timeIntervalSinceReferenceDate }})
  {% elif metadata.type == "Optional" %}
    nil
  {% elif metadata.type == "Array" and value %}
    [{% for value in value %}
      {% call valueBlock value metadata.element.items[forloop.counter0]|default:metadata.element %}
      {{ ", " if not forloop.last }}
    {% endfor %}]
  {% elif metadata.type == "Dictionary" %}
    [{% for key,value in value %}
      "{{key}}": {% call valueBlock value metadata.properties[key] %}
      {{ ", " if not forloop.last }}
    {% empty %}
      :
    {% endfor %}]
  {% elif metadata.type == "Bool" %}
    {% if value %}true{% else %}false{% endif %}
  {% else %}
    {{ value }}
  {% endif %}
{% endfilter %}{% endmacro %}

// swiftlint:disable identifier_name line_length number_separator type_body_length
{{accessModifier}}enum {{param.enumName|default:"PlistFiles"}} {
  {% if files.count > 1 or param.forceFileNameEnum %}
  {% for file in files %}
  {{accessModifier}}enum {{file.name|swiftIdentifier:"pretty"|escapeReservedKeywords}} {
    {% filter indent:2 %}{% call fileBlock file %}{% endfilter %}
  }
  {% endfor %}
  {% else %}
  {% call fileBlock files.first %}
  {% endif %}
}

{{accessModifier}}extension  NSUserActivity {
  convenience init(activity: {{param.enumName|default:"PlistFiles"}}.{{param.activityTypeEnumName|default:"ActivityType"}}) {
    self.init(activityType: activity.rawValue)
  }
    
  var registredActivityType: {{param.enumName|default:"PlistFiles"}}.{{param.activityTypeEnumName|default:"ActivityType"}}? {
      InfoPlist.ActivityType(rawValue: activityType)
  }
}
// swiftlint:enable identifier_name line_length number_separator type_body_length
{% else %}
// No files found
{% endif %}
